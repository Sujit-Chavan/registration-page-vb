<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAoHCBUVFBgVFRUYGRgYGyEaGxkbHB8aGxoYGRsaGhoYGBkb
        IC0kGx0qIRoaJTclKi4xNDQ0GiM6PzoyPi0zNDH/2wBDAQsLCxAPEB8SEh81KiMqMzMzPDMzMzMzMzMz
        MzMzMzMzMzMzPDMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzP/wAARCACTAVYDASIAAhEBAxEB/8QA
        GwAAAgMBAQEAAAAAAAAAAAAAAwQAAgUBBgf/xAA/EAABAgMGAQkHAgUEAwEAAAABAAIDESEEEjFBUWFx
        BSIyUoGRodHwE0JikrHB4RTScoKywvEGIzNTFaLiFv/EABkBAAMBAQEAAAAAAAAAAAAAAAECAwQABf/E
        AC0RAAICAQQBAgYBBAMAAAAAAAABAhEhAxIxQVEToQQiMmFxkcEUM7HwI0KB/9oADAMBAAIRAxEAPwD5
        o0Y+swugLrRjw+4XQF6SR5rZAFYBdAVgEyQjZAFYBdAVgE6QjY9yGP8Afh/xfYrZ5TFSsnkQf78P+L7F
        a/KbucafT7ladL6Wed8Rb1l+P5MSLCBQ2QiCEdx28R5rgdw7whZoTdUEaKDifoFazCp/m/uUhzMgACZm
        gMzgNAmbLZ3z6LsHZHNrtkyROTpOzNit5xUaJJiLBdePNPcjQ7E4tDg2l4ifYDL6qyWBt6SyKwYtTPR1
        f5SoYYKYbZwwkulg7MY3TgJqsBpdOgEvibvupuPgDfaFnQiB2ql1an6Yy935m+aQMI3iDKU5YtpXinjk
        MJ7izbQRDc0SkSDvr/aECG2vYf6Sm2MbKWsj025T23RITGAzNaEdLUEZNT7b5DuSvBmxG848V6r/AE68
        iznPnu+jVhOgsLiJ4mWJ/avQcgMH6c84dM69VmyVRpmb42W7S/QG1EHBZMVsk7yg+R5rhPXneSz4b23h
        7R0xmWgz4YKtC6EGo2BiO0QpLQbChyFXE3TlS8cM8AqRoTJi6XSlmKk5nFK4mpTXAF7ajg3+kIzYgPSn
        PUVnvKYqrvhtpU4D3R1R8Sr7NvWPyj9yG0XcmMWZwLpAUAPfSpTzB9D9CsyzOaHUc7Dqj9y0oT2nEuwO
        Q0O64hq4YzFdzncSqtdzTPUfRyK+7M9Lw0VocIFhN10qZjKmm6VLBnc6o5ZmzNFu+zIaG9po47gGQPFI
        2OE1ovSNNxU/Km7S5t4kg5ZjQfCoait4Lw1HQS0wXXaYmho7v6KWg2B2P9r+7oqsCRJJaZaTGHcjxLSz
        ANdn721SoSbeDVpx25PGW+zPvlt11DWQMidRTDRcs1mD2kVBvDuk6ZT1puk9A4Nzd1RutWBYgA+bBeL5
        kTOAvmXS9E8EXCK5L+rKjLhcniYFUblVgDPZg4dLjSQ7PutptyHDMQw2zwaJuM3ZT52Ax7F522WlrWFx
        YCS4yE3FznGUh0sSSpenbtlVq9InKvL0ZwdCLgYbS1zxdFRUsYdbxEzsF5q38uRozzfc3MyDQKDKmCNy
        taLjTDF28SHPcJzc4t1ngJyHBYtmPONB0SumkuC0Mq2FbaAcx3BcSB7PBRSsp6Y81mPnuF0Q/U0JjXSO
        PduFAHboprwTafkYEP1NWDOCEA7VyK2E7U+uxUX4Ju/JcQxoPBXbDGg8EIMdq712LoDtXeuxMq8CO/Jq
        ciwx7dlB0ttCtblBgvOoMtN1j8iNPtmTLul9itLlKE68TN2VK6uWrS+lnn6y/wCZZ6/kSMPh4LoZ6mEI
        wXz97vPmusgOnI3h2nzS2/BSlXIy1tBhicxoEaFDqcOi7MdUpGLNkqkmZpU5DI0R7DaXuJoRQ+6Oqdk6
        ZOUHW5cFTAAmXEd4XXR+bISxNZjQYDsXbTFfQODiDoKjcKQ4Lywlpc5s5yrMU0VYU+Q1i5CDWkuqZ45j
        Qpvk9lHYZZjdWax8/e8UTk4vk7nO7ymlGkNOdxYwIdO1Z4hH2n82o1WtefLpOx1KzQHF+LulvqjBEdFv
        IsyA7II7ITs2lCDTL3vFcMNxpI9ydIu8hHgh9BPndmK3eQoD/wBMSRi8ywwut8isD9OS6dcdN1ucjh36
        YtJMhEdIV6rPyhJEPiv7dLyha22V2n0WdEsrtvmb5pq3Q3brNcx/xdxTD6Ce3kI2C4YFvzN80ZrJ4loP
        8TfNchWd140N1pqZTB0FcZqfqiTL2bZa3B+1Aq1fAzHZI4tNB7zeqN0tEhuObfmb5osW1EGjAeaD0APd
        FOjNDtkAyvtDgMJSwrRL0JGNNWFsUHndJuHWG260mWf4m4HPYrFscJ173sK40wK0mMcCelKR8QVyJa0c
        8miLM41aQQQMJkYDQJ+xWd+AI4SP3CwIMNx1xzW1ZIRaMwTQeanO1gzvTtcmubO6kg0S494mgWgAG6CC
        ZAUmagAYyVBGcBIkkHvRLNZ3HnAkjfFZpY5KaUXdon6chsyT2D8peBDmQS17aYXWmVMJh6eeTv5bK1kg
        uc8NE5nDiVFvBtivLEWcnid6TpBrcWgTNxsgTeTVns995BI5zhLtv4rV5XgObchCcgBM9YykTTTBZsZx
        hw8Oc67I1mGyJnjqT4pYN7bXLKT+rb0hLlJ98gN6DRJtRXV3b9gvOWyztLTEEhccQyok58gHOxyqOKet
        BfRrCZvnuA0dJx4BZHLEWbGw4d4NaZAbAa5zNe0qqzSoMItO0zzdtsjiSZtwHvDQYFK2eyuvHo9E5hPR
        YL5uBvDmg8eiknPcx2ZpupasEndG3Tk2qsC3k9x0HEqKsSO84k8FFmqPgv8AN5GmNdWmX3CgYd1rtsLq
        09TC6LE7RWSRlbZltadERrXLSFiOisLGdE6SJtszmtcrBh3WkLIdFYWQ6J0kTbZXkVp9szj9itHlKG68
        SATw2nrxSsOA5pvA3SKzwlvPJRsZz7xvuddxPkrwklGjLqacpT3rxQrFiPFTe8PNKvtbyaBwymZedFps
        hiINdswlo/JzwJiomOOI70aXktp1xJZEiHEAmc5n6NWlyTCdWhz/AKUu2E6Q4n6BbHI0B1P4pd8lTakr
        E15Pa6ELfCdzaHP7KWNrhMiYMx909b4Dub2/ZdscB0ncR/cqwqrIb2oUzrJPMnC66fSH3CDZYBbOfYdl
        rWfk9xILqCelTwCSkQJNEuOP4Rw8IgpNppHHm6K64JMwX3wZGRcDTc5pv2Jl2rSs8EzbxGSZJRB6mz7n
        mWQzJE9mVtusGlOyn4QHWZwoR4J00P8A1F8Gd7M3u37rb5LhkQSPjd/S1LOszpmngmJxQzmz6VeaK0xN
        KmmKEiWpJzjtQlbYRKzHQXHAFbDvanI/IP2oV2KDMBwIwIaAe+SP6KaUnFVgWt8NzQWDEkl0tfVFlmC7
        db0azxHc667emlSlzYYnVPhpP6LseS2nq0ujOjsfPA9Fv9IR4N685pFHE/X0U1HssTHZubc2iWeyubI+
        +4kiQJPSbx1QwM9VNdCdlgva9zSDhXvFVosY7Q4EeBSMaJEvTmROgIkaAikx6qj2R0Q+8c89kGqQmonL
        OB+xwXE1Ehj+VoumThgs1ntG0vFdbEiT6RUJ5yJGMr6PRcl2VkQvEU3QGTB0dMYD3s6JhjLp5pJAwMpT
        GVMprPsLHSmSZn0Ey6NEAkHOHArDN/M8muMMDPtZkXmgn6ncIcnsM2znKQIxFNsFLRbS4QwAWloDS68S
        XSxJGE8e9ZNtjRHRTJ7hKgqcJJEr5HzHg0Hw473B73RTzWn3uqJy4mawOUjH5ziYgF1pxdKQDR4LejR5
        NY1wrcEyAcais/tRZzrGxwfeF4BrXTErsg8c0iXOnTTBdp2uS0q5R5qUZovuMQF4MjImTJEtbIkTvGRN
        aAzyksqO590UffnvKUsvBa/Kr3OcVjRoZl2n7K23sMZWJRXRDMzOAHdJJxWOrP6hHqJy9VCG50ws06ly
        2a44Ey0qJj2RXVH0yu89W2zur/uH5txurCC/D2h+Y+ax2RBXh9whR3ii1o89K3R6D9NE/wCx/wAx81ds
        CJ13fMV5+FH1w1KYhR2unLJFVfIkk10brYMTrO70tHtL2UDnOOgw7SsuLDmJAkfRIxIZbiO3JNdcnQin
        2akWNGf0nGWkqJzk1sS4+p7hodl55r1pWGLzHVPoKsWmNqKojjPaioJ7h5J1lqi4OOYrdb1hjRYXtzqe
        9GMVxMhex4eANFakyMos9G6C94BnniGt22TXJzIjXAEjpj3RqNli2YubIl7sTQE7YrRgWkhzec7pDM6j
        dBxxRi1JVhDMeHEddlLOt0bbJ7k+G9odgTSt0fFgskWt1Oc6u5809YrS4h3Pdlmd0XGW0z6k6j2aD4b3
        HWopLQg07lkPLwZSGWWwWoy0umOc7HVZzozjQuKOmmiMNRZ5OB7pYN7k/De6nNbll+Vml7wKOJR/1xEu
        cSVRxb4BNt8Dpe6vNb3HzQYloOAa09h80tFtby4zccTpquNtDtfAJlpsVKuQr4j5mg8fNDjPNzojpb6F
        WdGMzXwCkSK65jmMhodkyjxgKlkTJ+AIRd8ARnWh2vgPJANod6AVNrNEZMvBiCciwSP1XP07p9AS4/hC
        NpO3cFX9WZjDuXODHzyjUjWMjBgIkM9hsgR47gA0BxOJ5xPZKVUxFthGQwGWw3QPbzvSDQeH54KW11lE
        IN/9gcZsrw9mZB4/u2Tlhh0J9mdqjGSEYrpum1vTGX8e6D/+hAdcYGYEiYNZCvvepKclJqkjTppvg0Xj
        nTLJNlhMTnPGc0SzNa5w5hkMTebjTfish3LT3HoMmaYH9y2rPa3saJw26l0nS3M5+pKE4ySHWHk0Xvax
        oJaexza0x6SD+uh5w3Y6sNK06Syo3LT3TPsqTkKOwql3cqOkT7Kg4gdpyUlovtGj1H1/g149vhzAEN1X
        DC5QTFOlnVEMaEHuddcDwBrIaFedhcpuLgWwb1ekCZd0p94R38ugukYU9wdtJIS0WsUMpSNa3cpQAGXr
        0y2QEpkmbqVONMEu/lGCxrmC8SceaZTJnWR+GSUNuZdbFfD5oBDRexN50zhl6wWFauXhM3IZA/j/APlK
        tOh1cuDWtNtstOdIkYXXGszslZ2d7msD6ucGjmOxJA6qwovK0OYLoZn/ABzP9KrauWmUuwy0VzBOOM7u
        ie4rsotKXgNypZ4UBz4b3zcKUaZYgznLCixnmFOj/wD1d5K9mjw4kRrTNrSReM2i633jMyGE5T2VY74b
        Hlsy4A0c2UiMiKqM2pLnBqgmsO7LMiM64PY7yUVPbwjk/wAP3KJMeRq+w6GAT8twquY2hI8EExJk8d+s
        NUeLhljvorKjK01QKNAvVBnt5IlhZIGYz+yqx0sE1DOqOxJ2LOT20EAGi5MTIIElAquaSSqRSIIq7k29
        Ms7vIq9kscQNdNrs8jomLMS3BxE9DJOt5UitAF90uK7bn5RvVxTyZkPkx5HOBHZVOtszm4NA9cE4zlWJ
        1ypE5Rik0eZaf5TpSJz1E8MUvGlBjjPhtVMwpTBMzKuAH3oiN5ViU52emw7cUx/5aJ1hlltXH1orJNdG
        edeCrYVBTJOWJnSpouN5VfIVy0Hkm7Hym83qjDQajZc3KuDHqJU8s6Glc/SjGvh5JscoP2+VvkrjlJ2j
        flb5Ke6XSM8VBdv9CD4LWgGRNdQPskrzOp3u+sgFsWvlE3RRuPVGh2WS3lA9VnyhUg5NZXuWhGNWm2DL
        61YK8fNEbUTlKRA7568ERtu+FnyhEZbNGMM/h04HdV3S8e5zSAnHBcjO5n8w+jkd9ukSDDYP5fynIbHO
        ZP2cOsi1pABIkagEpXqNZaF2pZbPPudshHgtkx2ihhsmPhU/UM/62fKFT1n4LRow3DZUDaima3/bw/8A
        rZ8oRIMaGT/xM7kHrPwPupGbExwyH0CkFtTw+4W/EtELKE0dp80SC6CA5zocgBMm+/AEbqD12l9LJxju
        4aMS3uuNeKAuNNZCcztiPQXkRZLzwZVkQMpUNaYar10e1wnEn2ctBfNBkEpYGwnB59nLmyneNLxAPhMd
        qrCbiso0aE3pp0V5GjXTMCUqB8ucTmR1Rwrqte22l4aAHum41N44CRAx3+ibsrbKwA3BSQHPHZmq/qLM
        8Dm9JxqHz6vesc57pXTLOK5tZMFj2RCWPAa8nmvoATgGuyr1u/bHt0N85OFAchSfDXit+JFshJoc/eP7
        U7KzTvkOLXNDiLwJndbe5t2YmTTWadz29MMEovk8/ZYRkJ/gDYYBGYxrnSmATnLKWK3YossgA2I0u92Y
        7hzVlRrdZIZIuxZmh6MxLLBL6jk+GPsb7EOVGsDWBrjMCQoJXbz8d5/dYdowpKmNPotiNypZubJsbDCT
        es4/dL/rrISeZFmRLBtDMG8JGtARXXgjdYaNGnCSR51zaq9oYJCmv1WlG/TA4Ru5uHzIkQWZ0gDFFXYh
        mFPiSNcqjTu4Z51wGiG4yE5L0ESyWYVvxDxaynZfQXWey3XF0V4kBIXRUzGjlmnBr7FYzTPPF54cKKLU
        MGzHCMe1g/cuqW1eS+9eAkJ0yZ4jOWMiMaKtutN0TAnXsz8ky+M3nYYHN2rcvshviNOmOpKeTdUmYo1a
        bRWFbGhoJBmROVJ1yTEC03hO7nt5pGJCacJA9skeyuDWyIE57roSleWdqRi1aQ8Iux8PNXEXY+CXEUbe
        K4bS3bxV1L7mbZfQ42Lt9FWJHwoPXYlW2gHTx80Vj2kCg8fNVTrNgcEstBWRDlL12Jtrz8PZP7tSzYjd
        B4+aMYrdsdSdE++yMlfQcunKd3HGug+FXc9greJw92WPkl/aiWWJ123VTFblLxTxk+ie2+jRZamSGOG3
        7U5ZbYwXpNPR1+JvwrBY8TwHj5pyA8SdQdHfrN3Rk+iWpoxNc8otFZHv/wDlEbbmnAeP/wArDjPF00Hj
        rxQodpu4Ad5800Ypkf6WLWD0ZjBzTMYEZ7O2SDXN08fwuWW1tLTOQN4ZnR2a7RuAHjNGOME1p7G0Msa3
        qjxR2ubk0ePmkBHbt4ootAumUstcPUkXYkoSZoOaDiyfY5ORrKXuvtLbpIJneDm3RhLMjJYRjiZ/Pmtf
        kyIDDd/F9mqU01klOMoK0K29xL3OuAAmkwZndLNiGeDflHknYzmm9OWG+oH3QA5rcAONU6eKKwl8qVHY
        DC7EAbXWk/0JprSPdA/lA+yTEdu3j5qwjt28UrHlGUuh1rCTg3ub5JXli0ua0w2ltAC6V01mJCXj3K0W
        1NhsLzLIAVq4inn2LAdbGm8TIk1ONSSN0ILc76RTT0nFcBIcZ7qBww0A+yfsD3hxaXDnNLRWQBoWk0pU
        AcCULkmDDeSb7ZyPNF4E4db7ApyIyG1sw5ocQZdLSpwTyaeATlUnFL2MzlF0Zzrt6QbSU/ezmJJyy3xD
        aJgGZmQTt2ID7XDoIhBlQObenLQzEnfXdNwbRCutk9xGXNlj/Pslk8VQZSlSVewhC5Pivd0g0EmpOWJJ
        2Aqi257rxbD6LZVOJkJNpKlBM7lajrUwMMgADSsyXHc6DGQWVAcLxLOdiHCpMiD3oJ7nbKKcqujJbDiF
        95xae0aGQWN7F7okiRUnq7nRb9rIEQMAxnk7QrGEQB8w2szXnb4VTqKvJ6GjOTXHQs2AXNMgBdrkZ5aU
        K42yPLS4FolwyE6mSNEtZcJECtTIETO8il3WgDIf+3mjL07yaU5MF7CKXUc2TRngdqBDtDHUq3E5bDZP
        vtDWtlITImelhpj6qkLXaG3ZyGJ10busmooJO37loSk3x7DPJNuEJxMRocLpF260zJIoZjBK8oEODnNA
        a04AVlUUmRMpX9S0jAcK+a4YwM6CXE+azSnBxqyq06luoWII07gorFw0Hj5qLLsj59zSbN1vO52RzyvN
        2VDd1P1VwOmRhdMqjrN1VGtGe+Y0VmYDou6q4u6oIGn1HauuxXJgaDOAOZQ5NGqsxpOCIyHMZd4zVIv7
        C3RRt3UpqAWyxVIYAGGWret3+tFaE7m9/V6yreCc8oOCNUa83U557cP84JUvp36fZWvffTRFSIuIfm0m
        Tnn8Izl4disHN1Pu+8NOH+MFRrsNK6aBWDhLtGmQPb6qrwmuxWgkNzZipyz47f4TVmcOdU9EZy95qSgy
        piMM21x7fVUezkc7HDUdYeSaTySnENGcLpqcNfiG3rFLF4rU5578K/dXtTxdpnw623rsQWNvY0FdM00Z
        UCMajbHITgWmp6Ws8jtX7puFTEnhj4oNmuhrgNZ5cFcPEyi52Z9R3hBnNacz37KpIDTOeWe42S0S0huf
        YFyDaS4P0u4fzNXJsEdOVX0G9q0HXav2W7yREaYTqCV466N1K8m81K9DyE7/AGXfxH+xGWUT+K0607/A
        2HMmaDDfrNUc5mg7vwlmP5xGo21B+ysdJGlfNIyEYhSGbfKPJEs8NpOA+UeSWbOYN01ylnspynajDh3A
        JPeKTFQ3M8cu/RI84Ro04NinK1rY98hK60SEmiRoJu6PoBIOLJGR8BqNlR5NKTNKSyujNdgQycRw1n2K
        yqMaNG0a5Ic28TeNAZ8O5ORLUHOnedKRkK4SKHEjBvMaJOImaimBA+/chMjEHOYn9Fyd5IakblYxHbIS
        e50jvMUxFMxpiFIERgk0PfTKZQX2+8ZUAmTTCZlM4k5cE89wDQ01L98G8d/NK8YYqi6yZ1ttweZCI8NF
        AATXc6zTnJbIbWuc57qjE3jW7kBoD2lI2mxOBEjebmZCbRuAloFoabwF1rQCGgzAo2Xu8J8UdsWqRdxu
        OGwlrZDcQZuvCZFDPDAHtIqsZtgaTNjnHGYumYocs0W3WiUsJioIlwoNJJeHazMc6RnjJoMrp0Ceo0bN
        KE4xtMWdY29Z3ylUh2JkyXPIA+E1Oi0P1F4XnAAigo2uhLZSNM9Qs+PFcA5odMXp5SlKlNUko6fNGmDk
        8WLRoDZ9I9x7kGNAbdEnZnI6NRC4TE5TrPCW201UvEhOtTpo3sWWag+UjVG12JPhtGf1XHBssSmHlpcS
        BQ4Yd+iC6ATMio9d687UpN7UqLp+QRuqKhCijv8AsihvthNk7ne7t1m7qCG3ra6eaUEVtaHDQajdWEZu
        muQz7VqU0YXBlwwdb6acV0NbPpfTTihte3Q9w04qwe2eBlw/KCaOaYwGw+scsh25qzWM6xy01rmlr7ND
        3d+auIjdPBUUkTaf3DNa3rfTz0Vg1vW+nmhNe3fu/Oi6HtrQ7epprQrQ/CszCJ3jn1cjTNHdDbXna9Xq
        8VnCI3fPIdmasYw01yGnFVU4pEXpyb5CgCQrr9Ar3RrppmOKAIjZYHP6DddERu/d35rlJHOLG2NFK5jJ
        v39ao1mArX3dBqkmvbvll35otmigE8D7oOR12TxkTlF0MPApXXTU6LgI1QTaRlL5W608EvEtUnYDub5J
        tyFWk2akJzQHTdl4zFEB8YnAgdon9Usy3iVQPlb5KOr0RXYD7JlOKOWlTyXLfiHzDzTFnIAdzhVssQcw
        cjskI8RzTUOHhlku2e1GtXYanzTvUXA7024jTiJnnZr03+n5GA+vvH6MXkHWozNXY6nzXqv9ORD7B+PS
        OezN0dyeEY/jYNaX6KWmGJ9LNJRnzwcTxTVrtUpibu/8rND2uOB7/wAot1yLoQbWRyzWUVe4mTRMmWSy
        rS4xHlxJrgJYAYBW5VtLWgQwN3cch9+5ZjYzZ9FSU1ds3x03RpugTOOQy2Ccg2UMYXunIYUxOQSEEtLh
        zch/SEO3WphN0N5rfE5nHsRlNPAFBhrPDm4kuqZk4a8VrthtkJvb0es3QjVefsMRgdIN18e1ahuOLZN9
        0/3BNGaohrQblWRmx2dnSMRsh8Tf3IzYTi6/eEidWyAwbnQYAGax7Q8Nky7KVTu7TsTtm5RaW3S3msrl
        j7o1P4zTOSdtiS05cr/UbTojGs/5GXnfE2g0x7e5Y8aFDqfaNBM8C2plLVZNq5Sa5xN0+u1AhW1gcDdn
        X1mkiknyUj8PLnPsHtVgvESiNFMZghDgWaG1wAe1xniux7VDF3mnD1mqQrXDc5s2S3H+U1rnBojv21mv
        /Ab2NNTFb3fhUMJv/Y3u/CBEiQx7sxqP8of6iH1T67Ur1I+V7mhQfV+wV9jYTSK37fhKGytdJoeDUk6S
        k3NHEeH1DwH+VqQXMayV0zJJdlUykBXLBZ9RQa69yinKPn2M42CGDIxATPIU8Sjvs0MN/wCTwH7k2Lgm
        6TjOchPLvSdotDJGju/8qe2EVwvcG6Un2IxrLDJ6fgP3LqsXtPun12qKXyeF7lvm8v2GRZXCc2ZaT95u
        h3VxZHdRcbbg4G9QgGsjI1boafRNMtOP83W0CeKg+GZJua5QvDsrieh4SyBz4qCAbwbdxE8KpqBFAruc
        ndULjXD2grkMj1eM0+yJNzlb/AM2Q9TTLVWZZTKdzTLUyTUR1BXJuR33VWuoK5Nydqd/WSfZETfKjtis
        YLmgtp/Cdwi2mytBIDQJbbyXbAec3yd1jv64o1sIme3I68VSMVtM85y31ZnOs0p800n7pyXTZpZHP3Tk
        Jq8Uiv8ANk7bU+s1SI4VrmcndUan1nRTaRdNsGIbqC7mfdM+iDh61VhBdTmGsvdOYnr/AJUnhXXI9Ubz
        9aK7SNc25O0O/rKiCQzbKw4TjLmmt33SelPf/KvZ2OJPNyPuk4zGvrBch5VzGR30PrJXspEzXI5HQ6FM
        hG3kXeHCdDSeUsDJJxXmeCbeamuuR63H1xScY84+SWy0FkntHSwR7NFfMgAVGwGIOJOyGyHSpRgQEdwZ
        NcUMxCbkiG1IoCDgHaHdKNmJ7hdbHE5BHe8THDTijYiTWBd8UgmQ7c01ZOUYrAWtcWgzMgc5CvgEwx7S
        ajtkPHVKWmMC6nRAIBAFaVKZSyFxUlTRcW2I7Ek0TcK0uhsMQiZwaNXHDz7ElYYd454aflVtse+66081
        tBoTm7H1Jc5fc5acV0LvtLySTUmp3JVoLHuNAoA0YmZ4flP2CRMyZNFTwASuTob8I7Hjuhsw57hIbCQm
        VkiI84CfBGtlpvvJrLACWAyz9TQzItEicTSWzd6obn5CopdFoL4l4Sae5arbU9jbx6QBAHxc4+AP2WXY
        Yd54H2/Krbo955ukhrZgU2qcc/JLKV4sOxN8F32185VJOWZJVLRyi9vMBwx/iz8uxCswDAXunPBtM83Y
        9nfolXSc7Ez4flK5NLDKR0oros62OOaGbS8VmZaq/sQMST2flS8NfD8qb1JeSiUVwiR7W8SqcFSDa4l4
        GZ45K77riCSaDD0UOI83gS43Z5CkuE0PUlfI8YxqqKC3PGBJ+iH+sfqaoM26mu3dmuFzdTTbLvUnqy8l
        lBeA7OUHtcHZjWcppg8uxTp3HzWZManu/KtSQqe7hup+pJ9hcI+DYf8A6kinJvZPzS0Tll7qlo8UiYgl
        KZ7vyhuI1Pd+V0tWXkEdKC6ND/zL9B3qLNkN+78qKfqz8j+lDwaTcHfw/wBzUSxxDOU6SXFFaH1IzS+l
        jrYh1RGuN4VOA+iii1GRjF40qfdzOhUvG7icBmdSoonJsd5OHOZjhqesUe24u7f6guKK8fpMk/7gnHHS
        x97M7IMXicTmdAoopSNEeioy7foEWGMMcRmeqVFF0QyLQRhji3M6lWsnvHh4qKJl0JLhisfpO9e8gZqK
        KUuS0eCwwQIhqoouHhych4hHfj2KKLgvkK55uuqlrMa9h+hXFEewrg1YNGPlTm/VZ78FFEBO0Dh4rRiU
        hjcgHfP7KKIjMyomPrRcOA4n7KKJR0aMD/iec8J7HJZrsT2/QqKIHR5GLfgBkAKdizrP0lxRIysOGOuW
        baaOCiinqcHaHIQGgRm4hRRKhpcmfGFUAqKKE+TTDg4rHD1soolQ5VcUUSs46FFFFyOZ/9k=
</value>
  </data>
</root>